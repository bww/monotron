
title: Monotonic Series Attributes

options:
  table-of-contents: y
  
  rewrite-headers:
    Host: api.treno.io
  
  allow-headers:
    - Host
    - Content-Type
    - Content-Length

setup:
  - run: tools/truncate mn_api_key
    environment:
      ENVIRON: integration

vars:
  account_id: 0
  another_account_id: 1
  series_1: example-1
  series_2: example-2

tests:
  
  -
    id: grant1
    require: true
    
    request:
      method: POST
      url: /v1/accounts/${vars.account_id}/grants
      headers:
        Content-Type: application/json
      basic-auth:
        username: testapi
        password: secret123
      entity: |
        [
          "read,write,delete:series"
        ]

    response:
      status: 200

  -
    id: grant2
    require: true
    
    request:
      method: POST
      url: /v1/accounts/${vars.account_id}/grants
      headers:
        Content-Type: application/json
      basic-auth:
        username: testapi
        password: secret123
      entity: |
        [
          "read:series"
        ]

    response:
      status: 200

  -
    id: grant3
    require: true
    
    request:
      method: POST
      url: /v1/accounts/${vars.account_id}/grants
      headers:
        Content-Type: application/json
      basic-auth:
        username: testapi
        password: secret123
      entity: |
        []

    response:
      status: 200

  -
    require: true
    
    request:
      method: PUT
      url: /v1/accounts/${vars.account_id}/series/${vars.series_1}/000001
      headers:
        Content-Type: application/json
      basic-auth:
        username: ${grant1.response.value.api_key.key}
        password: ${grant1.response.value.api_key.secret}

    response:
      status: 200
      compare: semantic
      entity: |
        {
          "key": "${vars.series_1}",
          "token": "000001",
          "value": 1
        }

  -
    request:
      method: PUT
      url: /v1/accounts/${vars.account_id}/series/${vars.series_1}/000001/attrs
      headers:
        Content-Type: application/json
      basic-auth:
        username: ${grant1.response.value.api_key.key}
        password: ${grant1.response.value.api_key.secret}
      entity: |
        {
          "first": "1",
          "second": "2",
          "third": "3"
        }

    response:
      status: 200
      compare: semantic
      entity: |
        {
          "first": "1",
          "second": "2",
          "third": "3"
        }

  -
    request:
      method: GET
      url: /v1/accounts/${vars.account_id}/series/${vars.series_1}/000001/attrs
      basic-auth:
        username: ${grant1.response.value.api_key.key}
        password: ${grant1.response.value.api_key.secret}

    response:
      status: 200
      compare: semantic
      entity: |
        {
          "first": "1",
          "second": "2",
          "third": "3"
        }

  -
    request:
      method: GET
      url: /v1/accounts/${vars.account_id}/series/${vars.series_1}/000001/attrs/first
      basic-auth:
        username: ${grant1.response.value.api_key.key}
        password: ${grant1.response.value.api_key.secret}

    response:
      status: 200
      entity: |
        1

  -
    request:
      method: DELETE
      url: /v1/accounts/${vars.account_id}/series/${vars.series_1}/000001/attrs/first
      basic-auth:
        username: ${grant1.response.value.api_key.key}
        password: ${grant1.response.value.api_key.secret}

    response:
      status: 200

  -
    request:
      method: GET
      url: /v1/accounts/${vars.account_id}/series/${vars.series_1}/000001/attrs/first
      basic-auth:
        username: ${grant1.response.value.api_key.key}
        password: ${grant1.response.value.api_key.secret}

    response:
      status: 404

  -
    request:
      method: GET
      url: /v1/accounts/${vars.account_id}/series/${vars.series_1}/000001/attrs/second
      basic-auth:
        username: ${grant1.response.value.api_key.key}
        password: ${grant1.response.value.api_key.secret}

    response:
      status: 200
      entity: |
        2

  -
    request:
      method: DELETE
      url: /v1/accounts/${vars.account_id}/series/${vars.series_1}/000001/attrs
      basic-auth:
        username: ${grant1.response.value.api_key.key}
        password: ${grant1.response.value.api_key.secret}

    response:
      status: 200

  -
    request:
      method: GET
      url: /v1/accounts/${vars.account_id}/series/${vars.series_1}/000001/attrs/second
      basic-auth:
        username: ${grant1.response.value.api_key.key}
        password: ${grant1.response.value.api_key.secret}

    response:
      status: 404

  -
    request:
      method: GET
      url: /v1/accounts/${vars.account_id}/series/${vars.series_1}/000001/attrs/third
      basic-auth:
        username: ${grant1.response.value.api_key.key}
        password: ${grant1.response.value.api_key.secret}

    response:
      status: 404

