#!/usr/bin/env bash

set -eo pipefail

# where am i?
me="$0"
me_home=$(dirname "$0")
me_home=$(cd "$me_home" && pwd)

# project
project_home=$(cd "$me_home/.." && pwd)

# environment
export ENVIRON=integration
export DB_DSN=postgresql://postgres@localhost/monotron_$ENVIRON?connect_timeout=5
export ROOT_API_KEY=testapi
export ROOT_API_SECRET=secret123

# deps
. "$me_home/_lib.sh"

# defaults
component=monotron
hostname=localhost
exec_cmd="$project_home/target/debug/monotron"
test_root="$project_home/test/api"

# parse arguments
args=$(getopt D: $*)
set -- $args
for i; do
  case "$i"
  in
    -D)
      extra_flags="$extra_flags --gendoc --doc:type openapi --doc:include-http --doc:format-entities --doc:output $2"; shift;
      shift;;
    --)
      shift;
      break;;
  esac
done

# build the target
(cd "$project_home/" && cargo build)
# cycledb
$me_home/cycledb
# packages from the command line
packages=$*

# run integration tests
if [ ! -z "$packages" ]; then \
  $INSTAUNIT $extra_flags \
    --base-url "http://$hostname:3030/" \
    --http:redirects 0 \
    --exec "${exec_cmd}" \
    --await "http://$hostname:3030/v1" \
    $services $(echo "$packages" | tr ',' ' ' | perl -pe 's/\s+/\n/g' | xargs -I '%' echo "$test_root/%.yml" | perl -pe 's/\n/ /g')
else
  $INSTAUNIT $extra_flags \
    --base-url "http://$hostname:3030/" \
    --http:redirects 0 \
    --exec "${exec_cmd}" \
    --await "http://$hostname:3030/v1" \
    $service $(find "$test_root" -name '*.yml' -and \! -name '*-service.yml' | sort)
fi
